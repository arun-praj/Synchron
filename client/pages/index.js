import React, { useEffect } from 'react'
import Head from 'next/head'
import { useMemo, useState } from 'react'
import useAuth from '../hooks/useAuth'
import NavBar from '../components/NavBar'

import FullCalendar, { formatDate } from '@fullcalendar/react'
import dayGridPlugin from '@fullcalendar/daygrid'
import interactionPlugin from '@fullcalendar/interaction'

export default function Home() {
   const me = useAuth()
   const [weekendsVisible, setWeekendsVisible] = useState(true)
   const [showChild, setShowChild] = useState(false)
   useEffect(() => {
      setShowChild(true)
   }, [])
   console.log(me)

   if (!showChild) {
      return null
   }
   if (typeof window === 'undefined') {
      return <></>
   }
   return (
      <div>
         <Head>
            <title>Synchron</title>
            <meta name='description' content='Generated by create next app' />
            {/* <link rel='icon' href='/favicon.ico' /> */}
         </Head>

         <div>
            <NavBar />
            <div
               style={{
                  display: 'flex',
                  marginTop: '32px',
               }}
            >
               <div
                  style={{
                     minHeight: '70vh',
                     flexGrow: 1,
                     padding: '0 56px',
                  }}
               >
                  <FullCalendar
                     plugins={[dayGridPlugin, interactionPlugin]}
                     headerToolbar={{
                        left: 'prev,next today',
                        center: 'title',
                        right: 'dayGridMonth,timeGridWeek,timeGridDay',
                     }}
                     weekends={weekendsVisible}
                     initialView='dayGridMonth'
                     editable={true}
                     height='85vh'
                     navLinks={true}
                     selectable={true}
                     selectMirror={true}
                     dayMaxEvents={true}
                     events={[
                        {
                           title: 'Have become comforatably numb',
                           start: '2022-05-15 07:55:33.091813+00',
                        },
                     ]}
                  />
               </div>
               <div
                  style={{
                     padding: '0 56px 0 0px',
                     width: '256px',
                     // textAlign: 'center',
                  }}
               >
                  <div>
                     <h3>Team info</h3>
                     <div>
                        {me?.teams.length > 0 ? (
                           <div>
                              {me?.teams.map((team) => {
                                 return (
                                    <ol>
                                       <li>{team.teamName}</li>
                                       {team.users?.map((user) => {
                                          return (
                                             <ul>
                                                <li>{user}</li>
                                             </ul>
                                          )
                                       })}
                                    </ol>
                                 )
                              })}
                           </div>
                        ) : (
                           <div>You are not in any team.</div>
                        )}
                     </div>
                     <div>
                        <h3>Calendar settings</h3>
                        <div>
                           <div
                              onClick={() => {
                                 setWeekendsVisible(!weekendsVisible)
                              }}
                           >
                              <input type={'checkbox'} checked={weekendsVisible} />
                              <label for='vehicle1'> &nbsp; &nbsp;Display weekend </label>
                           </div>

                           <br></br>
                        </div>
                     </div>
                  </div>
               </div>
            </div>
         </div>
      </div>
   )
}

export async function getServerSideProps(context) {
   // const data = await res.json()

   return { props: {} }
}
